Components.utils.import("resource://gre/modules/NetUtil.jsm");Components.utils.import("resource://gre/modules/FileUtils.jsm");function openpopup() {	alert('au feu!!');	//var nsIFilePicker = Components.interfaces.nsIFilePicker;	//var fp = Components.classes["@mozilla.org/filepicker;1"].createInstance(nsIFilePicker);	//fp.init(window, "Select a File", nsIFilePicker.modeOpen);	var fichier = gAP_browseAlarmanto();	//TEST POUR STOCKER EN LOCAL DES DONNEES AVEC LOCALSTORAGE	/*localStorage.setItem('userName', 'taranfx');                 //defining the localStorage variable	alert("Your user is: " + localStorage.getItem('userName'));  // accessing it	alert("Hello " + localStorage.userName);                     // another way of accessing the variable	localStorage.removeItem('userName');                         // finally unset it	// FIN TEST (marche pas pour l'instant)	*/	/*Components.utils.import("resource://gre/modules/Services.jsm");      Components.utils.import("resource://gre/modules/FileUtils.jsm");            let file = FileUtils.getFile("chrome://MulticallLN/content/", ["multicallln.sqlite"]);      let mDBConn = Services.storage.openDatabase(file); // Will also create the file if it does not exist  	*/		/*var databaseOptions = {		fileName: "multicallln",		version: "1.0",		displayName: "SQLite Hello World",		maxSize: 1024	};		var database = openDatabase(		databaseOptions.fileName,		databaseOptions.version,		databaseOptions.displayName,		databaseOptions.maxSize);		*/				/*var prefs = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService);	prefs = prefs.getBranch("extensions.multicall@anto.com.");		prefs.setIntPref("extensions.follow_up_ext.calnamee",35);		var calName = prefs.getIntPref("extensions.follow_up_ext.calnamee");	alert(calName);	*/				//mozIStorageConnection openDatabase(	in nsIFile aDatabaseFile);	alert('au feu22222!!');	}function gAP_browseAlarmanto() {        const nsIFilePicker = Components.interfaces.nsIFilePicker;        var fp = Components.classes["@mozilla.org/filepicker;1"]                    .createInstance(nsIFilePicker);        //var bundlePreferences = document.getElementById("bundleCalendarPreferences");        //var title = bundlePreferences.getString("Open");        var title = "Hello";		var wildmat = "*.wav";        //var label = bundlePreferences.getFormattedString("filterWav", [wildmat], 1);        fp.init(window, title, nsIFilePicker.modeOpen);        //fp.appendFilter(label, wildmat);        fp.appendFilters(nsIFilePicker.filterAll);        var ret = fp.show();        if (ret == nsIFilePicker.returnOK) {            //document.getElementById("calendar.alarms.soundURL").value = fp.fileURL.spec;            //document.getElementById("alarmSoundCheckbox").checked = true;			alert(fp.fileURL.spec);            //this.readSoundLocation();										var prefs = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService);				prefs = prefs.getBranch("extensions.multicall@anto.com.");				prefs.setCharPref("extensions.follow_up_ext.calnameee",fp.fileURL.spec);					var calName = prefs.getCharPref("extensions.follow_up_ext.calnameee");				alert(calName);									        }    }	